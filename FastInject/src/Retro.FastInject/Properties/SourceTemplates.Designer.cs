//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Retro.FastInject {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SourceTemplates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SourceTemplates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Retro.FastInject.Properties.SourceTemplates", typeof(SourceTemplates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#DoubleDisposable}}
        ///_disposables.Add(new DisposableWrapper(service, service));    
        ///{{/DoubleDisposable}} 
        ///{{^DoubleDisposable}}
        ///{{#IsDisposable}}
        ///_disposables.Add(new DisposableWrapper(service, null));    
        ///{{/IsDisposable}}
        ///{{#IsAsyncDisposable}}
        ///_disposables.Add(new DisposableWrapper(null, service));    
        ///{{/IsAsyncDisposable}}
        ///{{/DoubleDisposable}}
        ///.
        /// </summary>
        internal static string DisposableManagementTemplate {
            get {
                return ResourceManager.GetString("DisposableManagementTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{! This template generates the service initialization statement, handling different lifetimes and types }}
        ///{{#IsTransient}}
        ///{{#HasAssociatedPropertyOrField}}
        ///{{&gt; InitializingStatement}}{{/HasAssociatedPropertyOrField}}
        ///{{^HasAssociatedPropertyOrField}}{{&gt; InitializingStatement}}
        ///{{/HasAssociatedPropertyOrField}}
        ///{{/IsTransient}}
        ///{{^IsTransient}}
        ///{{#HasAssociatedPropertyOrField}}
        ///{{&gt; InitializingStatement}}
        ///{{/HasAssociatedPropertyOrField}}
        ///{{^HasAssociatedPropertyOrField}}
        ///{{#IsValueType}}
        ///Ini [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetInitializingStatementTemplate {
            get {
                return ResourceManager.GetString("GetInitializingStatementTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{! This template handles service initialization with different patterns based on lifetime and symbol type }}
        ///{{#HasAssociatedMethod}}
        ///{{#IsMethodStatic}}
        ///{{AssociatedMethodFullName}}
        ///{{/IsMethodStatic}}
        ///{{^IsMethodStatic}}
        ///{{#IsScoped}}
        ///{{#scopedTransient}}_root.{{/scopedTransient}}{{AssociatedSymbolName}}{{/IsScoped}}{{^IsScoped}}{{^scopedTransient}}{{AssociatedSymbolName}}{{/scopedTransient}}{{#scopedTransient}}_root.{{AssociatedSymbolName}}{{/scopedTransient}}{{/IsScoped}}{{/IsMethodStatic}}({{pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InitializingStatementTemplate {
            get {
                return ResourceManager.GetString("InitializingStatementTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to return serviceKey switch {
        ///  {{#Options}}
        ///  &quot;{{Key}}&quot; =&gt; {{#IsPrimary}}((IServiceProvider&lt;{{ServiceType}}&gt;) this).GetService(),{{/IsPrimary}}{{^IsPrimary}}this.Get{{ServiceName}}_{{Index}}(),{{/IsPrimary}}
        ///  {{/Options}}
        ///  _ =&gt; null
        ///};
        ///.
        /// </summary>
        internal static string KeyedServiceSwitchTemplate {
            get {
                return ResourceManager.GetString("KeyedServiceSwitchTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#SelectedService}}
        ///{{#Index}}this.Get{{ServiceName}}_{{Index}}(){{/Index}}
        ///{{^Index}}((IServiceProvider&lt;{{ServiceType}}&gt;) this).GetService(){{/Index}}
        ///{{/SelectedService}}
        ///{{^SelectedService}}
        ///{{#DefaultValue}}
        ///{{#UseDynamic}}_hybridServiceProvider.GetService&lt;{{ParameterType}}&gt;() ?? {{DefaultValue}}{{/UseDynamic}}
        ///{{^UseDynamic}}{{DefaultValue}}{{/UseDynamic}}
        ///{{/DefaultValue}}
        ///{{^DefaultValue}}
        ///{{#UseDynamic}}
        ///{{#IsNullable}}_hybridServiceProvider.GetService&lt;{{ParameterType}}&gt;(){{/IsNullable}} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ParameterResolutionTemplate {
            get {
                return ResourceManager.GetString("ParameterResolutionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{! This template generates a comma-separated list of parameters using the ParameterResolution template }}
        ///{{#Parameters}}
        ///{{&gt; ParameterResolution}}{{^IsLast}}, {{/IsLast}}
        ///{{/Parameters}}
        ///.
        /// </summary>
        internal static string ParametersHelperTemplate {
            get {
                return ResourceManager.GetString("ParametersHelperTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#RegularServices}}
        ///{{#Options}}
        ///{{#IsPrimary}}
        ///{{ServiceType}} IServiceProvider&lt;{{ServiceType}}&gt;.GetService() {    
        ///{{/IsPrimary}}
        ///{{^IsPrimary}}
        ///public {{ServiceType}} Get{{ServiceName}}_{{Index}}() {
        ///{{/IsPrimary}}
        ///  {{#withIndent &apos;  &apos;}}
        ///  {{&gt; ServiceResolution providerInterface=&apos;IServiceProvider&apos; getServiceMethod=&apos;GetService&apos; isScope=../../isScope providerInstance=../../providerInstance}}
        ///  {{/withIndent}}
        ///}
        ///
        ///{{/Options}}    
        ///{{/RegularServices}}.
        /// </summary>
        internal static string RegularServiceGettersTemplate {
            get {
                return ResourceManager.GetString("RegularServiceGettersTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using Microsoft.Extensions.DependencyInjection;
        ///using Retro.FastInject.Core;
        ///{{#WithDynamicServices}}
        ///using Retro.FastInject.Dynamic;    
        ///{{/WithDynamicServices}}
        ///
        ///namespace {{Namespace}};
        ///
        ///#nullable enable
        ///
        ///partial class {{ClassName}} : ICompileTimeServiceProvider,
        ///    {{#RegularServices}}
        ///    IServiceProvider&lt;{{ServiceType}}&gt;,
        ///    {{/RegularServices}}
        ///    IKeyedServiceProvider,
        ///    {{#K [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServiceProviderTemplate {
            get {
                return ResourceManager.GetString("ServiceProviderTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#FromOtherService}}
        ///return (({{providerInterface}}&lt;{{OtherType}}&gt;) {{providerInstance}}).{{getServiceMethod}}({{#if serviceKey}}serviceKey{{/if}});  
        ///{{/FromOtherService}}
        ///{{#IsSingleton}}
        ///{{#if isScope}}
        ///return (({{providerInterface}}&lt;{{ServiceType}}&gt;) _root).{{getServiceMethod}}({{#if serviceKey}}serviceKey{{/if}}); 
        ///{{else}}
        ///return {{InitializingStatement}};
        ///{{/if}} 
        ///{{/IsSingleton}}
        ///{{#IsScoped}}
        ///{{#if isScope}}    
        ///return {{InitializingStatement}};
        ///{{else}}
        ///return (({{providerInterface} [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServiceResolutionTemplate {
            get {
                return ResourceManager.GetString("ServiceResolutionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#RegularServices}}
        ///if (serviceType == typeof({{ServiceType}})) return ((IServiceProvider&lt;{{ServiceType}}&gt;) {{../providerInstance}}).GetService();
        ///{{/RegularServices}}
        ///.
        /// </summary>
        internal static string ServiceTypeResolutionTemplate {
            get {
                return ResourceManager.GetString("ServiceTypeResolutionTemplate", resourceCulture);
            }
        }
    }
}
